[{"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/App.js":"1","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductListScreen.js":"2","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Header.js":"3","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/productConstants.js":"4","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/productListReducer.js":"5","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/productsActions.js":"6","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/Store/index.js":"7","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reportWebVitals.js":"8","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/CartScreen.js":"9","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProfileScreen.js":"10","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/OrderScreen.js":"11","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/cartReducer.js":"12","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Message.js":"13","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Loader.js":"14","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/CheckoutSteps.js":"15","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/orderActions.js":"16","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/cartConstant.js":"17","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductScreen.js":"18","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/UserEditScreen.js":"19","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ShippingScreen.js":"20","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Footer.js":"21","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Rating.js":"22","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/cartActions.js":"23","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductEditScreen.js":"24"},{"size":2124,"mtime":1617133368020,"results":"25","hashOfConfig":"26"},{"size":3730,"mtime":1617127572962,"results":"27","hashOfConfig":"26"},{"size":2437,"mtime":1617132018337,"results":"28","hashOfConfig":"26"},{"size":801,"mtime":1617125419562,"results":"29","hashOfConfig":"26"},{"size":2617,"mtime":1617125573058,"results":"30","hashOfConfig":"26"},{"size":2746,"mtime":1617125844869,"results":"31","hashOfConfig":"26"},{"size":2259,"mtime":1617125600745,"results":"32","hashOfConfig":"26"},{"size":362,"mtime":1607681423487,"results":"33","hashOfConfig":"26"},{"size":3574,"mtime":1616332879629,"results":"34","hashOfConfig":"26"},{"size":5402,"mtime":1616513428908,"results":"35","hashOfConfig":"26"},{"size":6813,"mtime":1616511839714,"results":"36","hashOfConfig":"26"},{"size":1286,"mtime":1616514431046,"results":"37","hashOfConfig":"26"},{"size":243,"mtime":1615635862106,"results":"38","hashOfConfig":"26"},{"size":390,"mtime":1615635539708,"results":"39","hashOfConfig":"26"},{"size":1249,"mtime":1616336327692,"results":"40","hashOfConfig":"26"},{"size":3375,"mtime":1616514502840,"results":"41","hashOfConfig":"26"},{"size":319,"mtime":1616514254250,"results":"42","hashOfConfig":"26"},{"size":4036,"mtime":1617125348740,"results":"43","hashOfConfig":"26"},{"size":3098,"mtime":1617132005195,"results":"44","hashOfConfig":"26"},{"size":2522,"mtime":1616335482460,"results":"45","hashOfConfig":"26"},{"size":317,"mtime":1607688523873,"results":"46","hashOfConfig":"26"},{"size":1455,"mtime":1614018321079,"results":"47","hashOfConfig":"26"},{"size":1212,"mtime":1616337174976,"results":"48","hashOfConfig":"26"},{"size":4450,"mtime":1617133670157,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2jj8d2",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/App.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductListScreen.js",["102"],"import React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table, Row, Col } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {\n  listProduct,\n  deleteProduct,\n  createProduct,\n} from '../actions/productsActions';\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\n\nconst ProductListScreen = ({ history, match }) => {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    product: createdProduct,\n    success: successCreate,\n  } = productCreate;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      history.push('/login');\n    }\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProduct());\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are You Sure')) {\n      dispatch(deleteProduct(id));\n    }\n  };\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped hover responsive bordered className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>PRICE</th>\n              <th>CATEGORY</th>\n              <th>BRAND</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>${product.price}</td>\n                <td>{product.category}</td>\n                <td>{product.brand}</td>\n                <td>\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(product._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n",["103","104"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Header.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/productConstants.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/productListReducer.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/productsActions.js",["105"],"import axios from 'axios';\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_SUCCESS,\n} from '../constants/productConstants';\n\nexport const listProduct = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const ProductDetails = (productID) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n    const { data } = await axios.get(`/api/products/${productID}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//Delete Product\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//Create Product\nexport const createProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(`/api/products`, {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/Store/index.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reportWebVitals.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/CartScreen.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProfileScreen.js",["106","107","108"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { listMyOrder } from '../actions/orderActions';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [confirmPassword, setConfirmPassword] = useState();\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, userInfo, user, orders]);\n  useEffect(() => {\n    dispatch(listMyOrder());\n  }, []);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Password does not Match');\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profiel</h2>\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter Email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter Password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter Confirm Password'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/OrderScreen.js",["109","110"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/cartReducer.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Message.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Loader.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/CheckoutSteps.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/orderActions.js",["111"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/cartConstant.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductScreen.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/UserEditScreen.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ShippingScreen.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Footer.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Rating.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/cartActions.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductEditScreen.js",["112"],{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"113","severity":1,"message":"121","line":14,"column":3,"nodeType":"115","messageId":"116","endLine":14,"endColumn":23},{"ruleId":"113","severity":1,"message":"122","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":39,"column":6,"nodeType":"125","endLine":39,"endColumn":39,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"124","line":42,"column":6,"nodeType":"125","endLine":42,"endColumn":8,"suggestions":"127"},{"ruleId":"113","severity":1,"message":"128","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":16},{"ruleId":"113","severity":1,"message":"129","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":22},{"ruleId":"113","severity":1,"message":"130","line":12,"column":3,"nodeType":"115","messageId":"116","endLine":12,"endColumn":18},{"ruleId":"113","severity":1,"message":"131","line":18,"column":10,"nodeType":"115","messageId":"116","endLine":18,"endColumn":22},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'PRODUCT_CREATE_RESET' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["134"],["135"],"'Button' is defined but never used.","'PayPalButton' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'countInStock' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [history, userInfo, user, orders, dispatch]",{"range":"140","text":"141"},"Update the dependencies array to be: [dispatch]",{"range":"142","text":"143"},[1518,1551],"[history, userInfo, user, orders, dispatch]",[1608,1610],"[dispatch]"]