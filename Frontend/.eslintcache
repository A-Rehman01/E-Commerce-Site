[{"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/App.js":"1","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductListScreen.js":"2","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Header.js":"3","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/productConstants.js":"4","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/productListReducer.js":"5","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/productsActions.js":"6","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/Store/index.js":"7","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reportWebVitals.js":"8","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/CartScreen.js":"9","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProfileScreen.js":"10","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/OrderScreen.js":"11","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/cartReducer.js":"12","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Message.js":"13","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Loader.js":"14","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/CheckoutSteps.js":"15","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/orderActions.js":"16","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/cartConstant.js":"17","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductScreen.js":"18","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/UserEditScreen.js":"19","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ShippingScreen.js":"20","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Footer.js":"21","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Rating.js":"22","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/cartActions.js":"23","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductEditScreen.js":"24","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/LoginScreen.js":"25","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/RegisterScreen.js":"26","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/UserListScreen.js":"27","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Product.js":"28","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/orderConstant.js":"29","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/userActions.js":"30","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/index.js":"31","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/PlaceOrderScreen.js":"32","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/PaymentScreen.js":"33","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/userReducers.js":"34","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/orderReducers.js":"35","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/FormContainer.js":"36","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/OrderListScreen.js":"37","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/HomeScreen.js":"38","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/userConstant.js":"39"},{"size":2252,"mtime":1617263741769,"results":"40","hashOfConfig":"41"},{"size":3731,"mtime":1617264415173,"results":"42","hashOfConfig":"41"},{"size":2436,"mtime":1617263787024,"results":"43","hashOfConfig":"41"},{"size":1351,"mtime":1617719564539,"results":"44","hashOfConfig":"41"},{"size":4019,"mtime":1617719862810,"results":"45","hashOfConfig":"41"},{"size":4523,"mtime":1617720339620,"results":"46","hashOfConfig":"41"},{"size":2514,"mtime":1617719916166,"results":"47","hashOfConfig":"41"},{"size":362,"mtime":1607681423487,"results":"48","hashOfConfig":"41"},{"size":3574,"mtime":1616332879629,"results":"49","hashOfConfig":"41"},{"size":5403,"mtime":1617302153918,"results":"50","hashOfConfig":"41"},{"size":7763,"mtime":1617302893469,"results":"51","hashOfConfig":"41"},{"size":1286,"mtime":1616514431046,"results":"52","hashOfConfig":"41"},{"size":243,"mtime":1615635862106,"results":"53","hashOfConfig":"41"},{"size":390,"mtime":1615635539708,"results":"54","hashOfConfig":"41"},{"size":1249,"mtime":1616336327692,"results":"55","hashOfConfig":"41"},{"size":4895,"mtime":1617299937606,"results":"56","hashOfConfig":"41"},{"size":319,"mtime":1616514254250,"results":"57","hashOfConfig":"41"},{"size":7811,"mtime":1617738670771,"results":"58","hashOfConfig":"41"},{"size":3098,"mtime":1617132005195,"results":"59","hashOfConfig":"41"},{"size":2522,"mtime":1616335482460,"results":"60","hashOfConfig":"41"},{"size":317,"mtime":1607688523873,"results":"61","hashOfConfig":"41"},{"size":1455,"mtime":1614018321079,"results":"62","hashOfConfig":"41"},{"size":1212,"mtime":1616337174976,"results":"63","hashOfConfig":"41"},{"size":6009,"mtime":1617219992983,"results":"64","hashOfConfig":"41"},{"size":2180,"mtime":1616245224624,"results":"65","hashOfConfig":"41"},{"size":3162,"mtime":1616325389892,"results":"66","hashOfConfig":"41"},{"size":2686,"mtime":1616863103913,"results":"67","hashOfConfig":"41"},{"size":817,"mtime":1614074429152,"results":"68","hashOfConfig":"41"},{"size":1145,"mtime":1617299530315,"results":"69","hashOfConfig":"41"},{"size":6098,"mtime":1616866656062,"results":"70","hashOfConfig":"41"},{"size":606,"mtime":1615631758496,"results":"71","hashOfConfig":"41"},{"size":4936,"mtime":1616413482038,"results":"72","hashOfConfig":"41"},{"size":1770,"mtime":1616338188919,"results":"73","hashOfConfig":"41"},{"size":4679,"mtime":1616866396259,"results":"74","hashOfConfig":"41"},{"size":3316,"mtime":1617300019587,"results":"75","hashOfConfig":"41"},{"size":336,"mtime":1616242508388,"results":"76","hashOfConfig":"41"},{"size":2509,"mtime":1617264251923,"results":"77","hashOfConfig":"41"},{"size":1061,"mtime":1615635771492,"results":"78","hashOfConfig":"41"},{"size":1619,"mtime":1616863313490,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"2jj8d2",{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"103"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/App.js",[],["174","175"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductListScreen.js",["176"],"import React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table, Row, Col } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {\n  listProduct,\n  deleteProduct,\n  createProduct,\n} from '../actions/productsActions';\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\n\nconst ProductListScreen = ({ history, match }) => {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    product: createdProduct,\n    success: successCreate,\n  } = productCreate;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo?.isAdmin) {\n      history.push('/login');\n    }\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProduct());\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are You Sure')) {\n      dispatch(deleteProduct(id));\n    }\n  };\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped hover responsive bordered className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>PRICE</th>\n              <th>CATEGORY</th>\n              <th>BRAND</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>${product.price}</td>\n                <td>{product.category}</td>\n                <td>{product.brand}</td>\n                <td>\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(product._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n",["177","178"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Header.js",[],["179","180"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/productConstants.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/productListReducer.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/productsActions.js",["181","182","183"],"import axios from 'axios';\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n} from '../constants/productConstants';\n\nexport const listProduct = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const ProductDetails = (productID) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n    const { data } = await axios.get(`/api/products/${productID}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//Delete Product\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//Create Product\nexport const createProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(`/api/products`, {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//Update Product\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//Review Product\nexport const createProductReview = (productID, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.post(`/api/products/${productID}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/Store/index.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reportWebVitals.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/CartScreen.js",[],["184","185"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProfileScreen.js",["186","187","188"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { listMyOrder } from '../actions/orderActions';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [confirmPassword, setConfirmPassword] = useState();\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, userInfo, user, orders]);\n  useEffect(() => {\n    dispatch(listMyOrder());\n  }, []);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Password does not Match');\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profiel</h2>\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter Email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter Password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter Confirm Password'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt?.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/OrderScreen.js",["189","190"],"import React, { useState, useEffect } from 'react';\nimport { Button, Row, Card, Col, ListGroup, Image } from 'react-bootstrap';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions';\nimport axios from 'axios';\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstant';\n\nconst OrderScreen = ({ match, history }) => {\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderId = match.params.id;\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { loading, error, order } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  //Calculate Prices\n  const addDecimal = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n  const itemsPrice = addDecimal(\n    order?.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n    const addPaypalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = async () => {\n        await setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      // if (!window.paypal) {\n      addPaypalScript();\n      // } else {\n      setSdkReady(true);\n      // }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver]);\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(orderId));\n  };\n  const successPaymetHandler = (paymentResult) => {\n    let FakePaymentResult = {\n      id: Math.floor(Math.random() * 100) + 10000101001001000,\n      status: 'successs',\n      update_time: new Date().toLocaleTimeString(),\n      payer: { email_address: order?.user?.email },\n    };\n    dispatch(payOrder(orderId, FakePaymentResult));\n  };\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name:</strong>\n                {'  '}\n                {order?.user?.name}\n              </p>\n              <p>\n                <strong>Email:</strong> {'  '}\n                <a href={`mailto:${order?.user?.email}`}>\n                  {order?.user?.email}\n                </a>\n              </p>\n              <p>\n                <strong>Address</strong>\n                {order?.shippingAddress?.address},{order?.shippingAddress?.city}\n                ,{order?.shippingAddress?.country},\n                {order?.shippingAddress?.postalCode}\n              </p>\n              {order?.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order?.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered </Message>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order?.paymentMethod}\n              </p>\n              {order?.isPaid ? (\n                <Message variant='success'>Paid on {order?.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid </Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order?.cartItems?.length === 0 ? (\n                <Message>Orders Is Empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order?.orderItems?.map((item, i) => (\n                    <ListGroup.Item key={i}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order?.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>{' '}\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order?.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order?.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    // <PayPalButton\n                    //   amount={order.totalPrice}\n                    //   onSuccess={successPaymetHandler}\n                    // />\n                    <Image\n                      src='https://woocommerce.com/wp-content/uploads/2016/04/ButtonStack_US_3rows_PNG.png'\n                      fluid\n                      onClick={successPaymetHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo?.isAdmin && order.isPaid && !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                    type='button'\n                    className='btn btn-block'\n                    onClick={deliverHandler}\n                  >\n                    mask as Deliver\n                  </Button>\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/cartReducer.js",[],["191","192"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Message.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Loader.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/CheckoutSteps.js",[],["193","194"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/orderActions.js",["195","196"],"import axios from 'axios';\nimport { EMPTY_CART_ITEMS } from '../constants/cartConstant';\nimport {\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_RESET,\n  ORDER_PAY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_DELIVER_SUCCESS,\n} from '../constants/orderConstant';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n    localStorage.removeItem('cartItems');\n    dispatch({ type: EMPTY_CART_ITEMS });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listMyOrder = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrder = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/deliver`,\n      {},\n      config\n    );\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/cartConstant.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductScreen.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/UserEditScreen.js",[],["197","198"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ShippingScreen.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Footer.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Rating.js",[],["199","200"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/cartActions.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/ProductEditScreen.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/LoginScreen.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/RegisterScreen.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/UserListScreen.js",["201","202"],"import React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listUsers, deleteUser } from '../actions/userActions';\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, successDelete]);\n\n  const deleteHandler = (id) => {\n    dispatch(deleteUser(id));\n  };\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped hover responsive bordered className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/Product.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/orderConstant.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/actions/userActions.js",["203"],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/index.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/PlaceOrderScreen.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/PaymentScreen.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/userReducers.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/reducer/orderReducers.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/components/FormContainer.js",[],"/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/OrderListScreen.js",["204"],"import React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listOrder } from '../actions/orderActions';\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrder());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped hover responsive bordered className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL PRICE</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order?.user?.name}</td>\n                <td>{order?.createdAt.substring(0, 10)}</td>\n                <td>$ {order?.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order?.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order?.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrderListScreen;\n","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/screens/HomeScreen.js",["205"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport { listProduct } from '../actions/productsActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n  useEffect(() => {\n    dispatch(listProduct());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          {products &&\n            products.map((product) => (\n              <Col key={product._id} sm={12} lg={4} xl={3} md={6}>\n                <Product product={product} />\n              </Col>\n            ))}\n        </Row>\n      )}{' '}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","/home/hameed/Documents/MERN Ecommerce/Project/Frontend/src/constants/userConstant.js",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},{"ruleId":"206","replacedBy":"214"},{"ruleId":"208","replacedBy":"215"},{"ruleId":"206","replacedBy":"216"},{"ruleId":"208","replacedBy":"217"},{"ruleId":"210","severity":1,"message":"218","line":14,"column":3,"nodeType":"212","messageId":"213","endLine":14,"endColumn":23},{"ruleId":"210","severity":1,"message":"219","line":18,"column":3,"nodeType":"212","messageId":"213","endLine":18,"endColumn":23},{"ruleId":"210","severity":1,"message":"220","line":22,"column":3,"nodeType":"212","messageId":"213","endLine":22,"endColumn":30},{"ruleId":"206","replacedBy":"221"},{"ruleId":"208","replacedBy":"222"},{"ruleId":"210","severity":1,"message":"223","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":39,"column":6,"nodeType":"226","endLine":39,"endColumn":39,"suggestions":"227"},{"ruleId":"224","severity":1,"message":"225","line":42,"column":6,"nodeType":"226","endLine":42,"endColumn":8,"suggestions":"228"},{"ruleId":"210","severity":1,"message":"229","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":22},{"ruleId":"224","severity":1,"message":"230","line":72,"column":6,"nodeType":"226","endLine":72,"endColumn":60,"suggestions":"231"},{"ruleId":"206","replacedBy":"232"},{"ruleId":"208","replacedBy":"233"},{"ruleId":"206","replacedBy":"234"},{"ruleId":"208","replacedBy":"235"},{"ruleId":"210","severity":1,"message":"236","line":12,"column":3,"nodeType":"212","messageId":"213","endLine":12,"endColumn":18},{"ruleId":"210","severity":1,"message":"237","line":22,"column":3,"nodeType":"212","messageId":"213","endLine":22,"endColumn":22},{"ruleId":"206","replacedBy":"238"},{"ruleId":"208","replacedBy":"239"},{"ruleId":"206","replacedBy":"240"},{"ruleId":"208","replacedBy":"241"},{"ruleId":"210","severity":1,"message":"211","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"242","line":24,"column":6,"nodeType":"226","endLine":24,"endColumn":40,"suggestions":"243"},{"ruleId":"210","severity":1,"message":"244","line":228,"column":13,"nodeType":"212","messageId":"213","endLine":228,"endColumn":17},{"ruleId":"210","severity":1,"message":"211","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},{"ruleId":"210","severity":1,"message":"211","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["245"],["246"],["245"],["246"],"'PRODUCT_CREATE_RESET' is defined but never used.","'PRODUCT_UPDATE_RESET' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.",["245"],["246"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["247"],["248"],"'PayPalButton' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["249"],["245"],["246"],["245"],["246"],"'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.",["245"],["246"],["245"],["246"],"React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["250"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [history, userInfo, user, orders, dispatch]",{"range":"259","text":"260"},"Update the dependencies array to be: [dispatch]",{"range":"261","text":"262"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"263","text":"264"},"Update the dependencies array to be: [dispatch, history, successDelete, userInfo]",{"range":"265","text":"266"},[1518,1551],"[history, userInfo, user, orders, dispatch]",[1608,1610],"[dispatch]",[2300,2354],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[898,932],"[dispatch, history, successDelete, userInfo]"]